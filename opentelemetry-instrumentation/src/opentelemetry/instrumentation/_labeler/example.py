# Copyright The OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Example Flask application demonstrating how to use Labeler for adding
custom attributes to metrics generated by the Flask instrumentor.
"""

from flask import Flask
from opentelemetry.instrumentation.flask import FlaskInstrumentor
from opentelemetry.instrumentation._labeler import get_labeler

app = Flask(__name__)
FlaskInstrumentor().instrument_app(app)


@app.route("/healthcheck")
def healthcheck():
    # Get the labeler for the current request
    labeler = get_labeler()

    labeler.add_attributes({
        "endpoint_type": "healthcheck",
        "internal_request": True,
    })
    return "OK"


@app.route("/user/<user_id>")
def user_profile(user_id):
    labeler = get_labeler()
    
    # Can add individual attributes or multiple at once
    labeler.add("user_id", user_id)
    labeler.add_attributes({
        "has_premium": user_id in ["123", "456"],
        "experiment_group": "control",
        "feature_enabled": True,
        "user_segment": "active"
    })
    
    return f"Got user profile for {user_id}"


if __name__ == "__main__":
    app.run(debug=True, port=5000, host='0.0.0.0')
